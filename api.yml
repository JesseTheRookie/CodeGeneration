openapi: 3.0.0
info:
  version: '1.0'
  title: 'Inholland_Bank_API'
  description: 'Banking API voor Inholland'
  
paths:
  /accounts:
    get:
      security:
        - ApiKeyAuth: []
      tags:
        - account
      summary: Returns all accounts
      operationId: getAccounts
      description: Returns a list of all accounts, if the logged in user is an employee
      parameters: 
        - name: type
          in: query
          description: The type of accounts that need to be considered to filter
          required: false
          schema:
            type: string
            enum:
              - current
              - savings
      responses:
        "200":
          description: The account list
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Account"
        "400":
          description: Client says no
        "500":
          description: Server says no
    post:
      security:
        - ApiKeyAuth: []
      tags:
        - account
      summary: Creates an account
      operationId: createAccount
      description: Creates a new account, if the logged in user is an employee
      responses:
        "200":
          description: Account created
        "400":
          description: Client says no
        "405":
          description: Invalid input
        "500":
          description: Server says no
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Account"
        description: Account details
        required: true

  /accounts/{iban}:
    get:
      security:
        - ApiKeyAuth: []
      parameters:
        - in: path
          name: iban
          required: true
          schema:
            type: string
          description: The iban
      tags:
        - account
      summary: Returns the specified account
      operationId: getAccountByIban
      description: Returns the specified account
      responses:
        "200":
          description: the account
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: "#/components/schemas/Account"
        "400":
          description: Client says no
        "404":
          description: Account not found
        "500":
          description: Server says no

    put:
      security:
        - ApiKeyAuth: []
      parameters:
        - in: path
          name: iban
          required: true
          schema:
            type: string
          description: The iban
      tags:
        - account
      summary: Toggles the status of the specified account
      operationId: toggleAccountStatus
      description: Toggles the status of the specified account, active or frozen
      responses:
        "200":
          description: Status updated
        "400":
          description: Client says no
        "404":
          description: Account not found
        "500":
          description: Server says no
    delete:
      security:
        - ApiKeyAuth: []
      parameters:
        - in: path
          name: iban
          required: true
          schema:
            type: string
          description: The iban
      tags:
        - account
      summary: Deletes the specified account
      operationId: deleteAccount
      description: Deletes the specified account, if the logged in user is an employee AND the balance of the account is zero
      responses:
        "200":
          description: Status updated
        "400":
          description: Client says no
        "404":
          description: Account not found
        "500":
          description: Server says no

  /users:
    get:
      security:
        - ApiKeyAuth: []
      tags:
        - user
      summary: Returns all users
      operationId: getUsers
      description: Returns a list of all users
      responses:
        "200":
          description: the user list
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/User"
        "400":
          description: Nee
    
    post:
      security:
        - ApiKeyAuth: []
      tags:
        - user
      summary: Creates a new user
      operationId: createUser
      description: Creates a new user, if the logged in user is an employee, and returns the userId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        "200":
          description: user created
          content:
            application/json:
              schema:
                type: integer
                description: userId
        "400": 
          description: Client says no
        "405":
          description: Invalid input
        "500":
          description: Server says no
          
  /users/{userId}:
    get:
      security:
        - ApiKeyAuth: []
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: integer
            minimum: 1
          description: The user ID
      tags:
        - user
      summary: Returns specified user
      operationId: getUserById
      description: Returns the specified user
      responses:
        "200":
          description: the user
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: "#/components/schemas/User"
        '400':
          description: Client says no
        '404':
          description: User not found
        '405':
          description: Validation exception
        "500":
          description: Server says no
          
  /users/{userId}/accounts:
    get:
      security:
        - ApiKeyAuth: []
      parameters:
        - in: path
          name: userId
          required: true
          schema:
            type: integer
          description: The user Id
      tags:
        - user
      summary: Returns all accounts of the specified user
      operationId: getAccountsByUserId
      description: Returns a list of accounts, belonging to the logged in user
      responses:
        "200":
          description: the account(s)
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Account"
        "400":
          description: Client says no
        "500":
          description: Server says no

  /users/login:
    post:
      tags:
        - user
      summary: Logs user into the system
      operationId: loginUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
        description: Username and password
        required: true
      responses:
        "200":
          description: User logged in
          content:
            application/json:
              schema:
                type: string
        "400":
          description: Invalid username/password supplied
        "500":
          description: Server says no

  /users/logout:
    get:
      tags:
        - user
      summary: Logs out current logged in user session
      operationId: logoutUser
      responses:
        default:
          description: successful operation
          
  /transactions:
    post:
      security:
        - ApiKeyAuth: []
      tags:
        - transaction
      summary: Place a new transaction
      operationId: createTransaction
      description: Creates a transaction of the specified amount between the specified accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Transaction'
      responses:
        '200':
          description: succes and returns transactionID
          content:
            application/json:
              schema:
                type: integer
                description: transactionID
        '400':
          description: the operation is unsuccesfull
    get:
      security:
        - ApiKeyAuth: []
      tags: 
        - transaction
      summary: Get transactions depending on the optional parameters; the abstinence of any parameters results in all transactions.
      operationId: getTransactions
      parameters:
        - name: transactionID
          in: query
          required: false
          schema:
            type: integer
          description: The id of a transaction
        - name: from
          in: query
          required: false
          schema:
            type: string
          description: The iban of the sending backaccount
        - name: to
          in: query
          required: false
          schema:
            type: string
          description: The iban of the receiving backaccount
        - name: performedBy
          in: query
          required: false
          schema:
            type: integer
          description: The userId of the user who performed the transaction
      responses:
        '200':
          description: succes
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Transaction'
        '400':
          description: Nee
          
  /deposits:
    get:
      security:
        - ApiKeyAuth: []
      tags:
        - deposits
      summary: Returns all deposits
      operationId: getDeposits
      description: Returns a list of all deposits
      responses:
        '200':
          description: the deposits list
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Deposit'
        '400':
          description: There occured an error
    post:
      security:
        - ApiKeyAuth: []
      tags:
        - deposits
      summary: Creates an deposit
      operationId: createDeposit
      description: Creates a new deposit moment
      responses:
        '200':
          description: Money succesfully deposited
        '400':
          description: There occured an error
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Deposit'
        description: Account details
        required: true
  /deposits/{iban}:
    get:
      security:
        - ApiKeyAuth: []
      parameters:
        - in: path
          name: iban
          required: true
          schema:
            type: string
            minimum: 1
          description: The account IBAN
      tags:
        - deposits
      summary: Returns the deposits of the specified account
      operationId: getDepositsByIban
      description: Returns the specified IBAN deposits
      responses:
        '200':
          description: the account 
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: '#/components/schemas/Deposit'
        '400':
          description: Invalid IBAN
  /Withdrawals:
    get:
      security:
        - ApiKeyAuth: []
      tags:
        - Withdrawal
      summary: gets all Withdrawals
      operationId: GetAllWithdrawals
      description: Gets a list with all Withdrawal transactions
      responses:
        '200':
          description: The list with all Withdrawals is successfully fetched
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Withdrawal'
        default:
          description: Oops, it looks like it didn't do what it was supposed to be doing..
    post:
      security:
        - ApiKeyAuth: []
      tags:
        - Withdrawal
      summary: Create a new Withdrawal
      operationId: CreatNewWithdrawal
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Withdrawal'
      description: Creates a new Withdrawal
      responses:
        '200':
          description: Withdrawal successfully created! 
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: '#/components/schemas/Withdrawal'
        '400':
          description: bad input parameter
          
  /Withdrawals/{iban}:
    get:
      security:
        - ApiKeyAuth: []
      parameters:
        - in: path
          name: iban
          required: true
          schema:
            type: string
          description: The IBAN
      tags:
        - Withdrawal
      summary: Get all withdrawals for a specific account
      operationId: GetAllWithdrawalsConnectedToSpecifiedAccount
      description: Gets a list of all withdraw transactions of the specified account
      responses:
        '200':
          description: The list with all Withdrawals for the specified account is successfully fetched 
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Withdrawal'
        '400':
          description: bad input parameter
          
components:
  schemas:
    Account:
      type: object
      required:
        - Iban
        - UserId
        - Name
        - Balance
        - Type
        - Status
      properties:
        Iban:
          type: string
        UserId:
          type: number
        Name:
          type: string
        Balance:
          type: number
        Accounttype:
          type: string
          enum: [current, savings]
        Status:
          type: string
          enum: [active, frozen]
    User:
      type: object
      required:
        - UserId
        - Name
        - Password
        - Role
      properties:
        UserId:
          type: integer
        Name:
          type: string
        Password:
          type: string
        Role:
          type: string
          enum: [user, employee, user_employee]
        Accounts:
          type: array
          items:
            $ref: "#/components/schemas/Account"
    Transaction:
      type: object
      required:
        - From
        - To
        - Amount
        - TimeStamp
        - PerformedBy
        - Id
      properties:
        Id:
          type: integer
          format: int64
        From:
          type: string
          description: the iban of the sending end
        To:
          type: string
          description: the iban of the receiving end
        Amount:
          type: number
          description: the amount to transfer
        TimeStamp:
          type: string
          format: date-time
        PerformedBy:
          type: integer
          description: userID of the user who creates the transaction
    Withdrawal:
      type: object
      required:
        - From
        - Amount
      properties:
        From:
          type: string
          description: de iban van de gebruiker
        Amount:
          type: number
          description: het op te nemen bedrag
        TimeStamp:
          type: string
          format: date-time
    Deposit:
      type: object
      required:
        - To
        - Amount
      properties:
        To:
          type: string
          description: de iban van de gebruiker
        Amount:
          type: number
          description: het te storten bedrag
        TimeStamp:
          type: string
          format: date-time
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: x-authtoken